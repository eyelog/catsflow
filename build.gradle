// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext {
        android_tools_version = "4.0.1"
        kotlin_version = "1.3.72"
        life_cycle_version = '2.2.0'
        dagger_version = '2.16'
        glide_version = '4.11.0'

        // SDK and tools
        compileSdkVersion = 28
        minSdkVersion = 21
        targetSdkVersion = 28

        hyperionVersion = '0.9.28-SNAPSHOT'

        kotlinVersion = '1.3.72'
        kotlinxVersion = '1.3.2'
        kotlinxSerializationVersion = '0.11.0'

        androidXVersion = '1.0.0'
        constraintLayoutVersion = '1.1.3'

        rxVersion = "2.2.3"
        rxKotlinVersion = "2.3.0"
        rxAndroidVersion = "2.1.0"

        roomVersion = '1.1.1'

        daggerVersion = '2.16'
        javaxInjectVersion = '1'
        koinVersion = '2.0.1'
        javaxAnnotationsVersion = '1.2'

        architectureLifeCycleVersion = '2.2.0-rc02'
        architectureLifeCycleLegacyVersion = '1.0.0'
        architectureRoomVersion = '2.2.1'

        retrofit2KotlinxSerializationConverter = '0.4.0'

        retrofitVersion = '2.8.1'
        okhttpVersion = '4.5.0'

        multidexVersion = '1.0.3'

        glideVersion = '4.9.0'

        leakcanaryVersion = '1.5.4'

        junitVersion = '4.12'
        hamcrestVersion = '2.1'
        mockitoVersion = '2.23.0'
        archCoreTestingVersion = '2.0.0'
        testCoreVersion = "1.0.0"
        mockkVersion = '1.9.3'
        coreArchTest = '1.1.1'
        espressoRunnerVersion = '1.1.1'
        espressoCoreVersion = '3.1.0'
        timberJunitRuleVersion = '1.0.1'

        androidToolsVersion = '3.6.2'
        detektVersion = '1.0.1'
        googleServicesVersion = '4.3.2'
        fabricPluginVersion = '1.31.0'
        fabricVersion = '1.26.1'

        lottieVersion = '3.0.7'
        cropperImageVersion = '2.2.4-native'

        timberVersion = '4.7.1'

        localeHelperAndroidVersion = '1.0.2'

        betterLinkVersion = '2.2.0'
        mentionsVersion = '0.1.1'

        materialVersion = '1.2.0-alpha01'

        zoomImageView = '2.0.0'

        mentionsDeps = [
                library: "com.github.percolate:Mentions:$mentionsVersion"
        ]

        rxAndroidDeps = [
                rxAndroid: "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"
        ]

        rxDeps = [
                rxJava  : "io.reactivex.rxjava2:rxjava:$rxVersion",
                rxKotlin: "io.reactivex.rxjava2:rxkotlin:$rxKotlinVersion",
        ]

        betterLinkDeps = [
                library: "me.saket:better-link-movement-method:$betterLinkVersion"
        ]

        hyperionDeps = [
                core  : "com.willowtreeapps.hyperion:hyperion-core:$hyperionVersion",
                timber: "com.willowtreeapps.hyperion:hyperion-timber:$hyperionVersion"
        ]

        androidXDeps = [
                coreKt          : "androidx.core:core-ktx:$androidXVersion",
                fragment        : "androidx.fragment:fragment-ktx:$androidXVersion",
                cardView        : "androidx.cardview:cardview:$androidXVersion",
                recyclerView    : "androidx.recyclerview:recyclerview:$androidXVersion",
                constraintLayout: "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion",
                material        : "com.google.android.material:material:$androidXVersion"
        ]

        googleMaterial = [
                material: "com.google.android.material:material:$materialVersion"
        ]

        coroutineDeps = [
                kotlinxCoroutinesCore   : "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinxVersion",
                kotlinxCoroutinesAndroid: "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinxVersion",
        ]

        lifecycleDeps = [
                lifecycleExt   : "androidx.lifecycle:lifecycle-extensions:$architectureLifeCycleVersion",
                lifecycle      : "androidx.lifecycle:lifecycle-runtime:$architectureLifeCycleVersion",
                lifecycleVM    : "androidx.lifecycle:lifecycle-viewmodel-ktx:$architectureLifeCycleVersion",
                lifecycleLegacy: "androidx.legacy:legacy-support-v4:$architectureLifeCycleLegacyVersion"
        ]

        lifecycleKapt = [
                compiler: "androidx.lifecycle:lifecycle-compiler:$architectureLifeCycleVersion"
        ]

        kotlinDeps = [
                kotlin       : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion",
                kotlinReflect: "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
        ]

        injectDeps = [
                inject         : "javax.inject:javax.inject:$javaxInjectVersion",
                javaxAnnotation: "javax.annotation:javax.annotation-api:$javaxAnnotationsVersion"
        ]

        daggerDeps = [
                dagger2: "com.google.dagger:dagger-android:$daggerVersion"
        ]

        glideDeps = [
                glide: "com.github.bumptech.glide:glide:$glideVersion",
                glideOkHttp: "com.github.bumptech.glide:okhttp3-integration:$glideVersion"
        ]

        glideDepsKapt = [
                glideApt: "com.github.bumptech.glide:compiler:$glideVersion",
        ]

        daggerKapt = [
                compiler : "com.google.dagger:dagger-compiler:$daggerVersion",
                processor: "com.google.dagger:dagger-android-processor:$daggerVersion"
        ]

        roomDeps = [
                room: "androidx.room:room-runtime:$architectureRoomVersion",
                roomRx: "androidx.room:room-rxjava2:$architectureRoomVersion"
        ]

        roomKapt = [
                roomKapt: "androidx.room:room-compiler:$architectureRoomVersion"
        ]

        localehelperDeps = [
                localehelper: "com.zeugmasolutions.localehelper:locale-helper-android:$localeHelperAndroidVersion"
        ]

        networkDeps = [
                retrofitMain                          : "com.squareup.retrofit2:retrofit:$retrofitVersion",
                retrofitConverter                     : "com.squareup.retrofit2:converter-gson:$retrofitVersion",
                retrofitRx                            : "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion",
                okHttpMain                            : "com.squareup.okhttp3:okhttp:$okhttpVersion",
                okHttpLogger                          : "com.squareup.okhttp3:logging-interceptor:$okhttpVersion",
                kotlinxSerialization                  : "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$kotlinxSerializationVersion",
                retrofit2KotlinxSerializationConverter: "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:$retrofit2KotlinxSerializationConverter",
                gson                                  : "com.google.code.gson:gson:2.8.6"
        ]

        kotlisSerializationDeps = [
                kotlinxSerialization: "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$kotlinxSerializationVersion"
        ]

        koinPack = [
                koin_core             : "org.koin:koin-core:$koinVersion",
                koin_android          : "org.koin:koin-android:$koinVersion",
                koin_java             : "org.koin:koin-java:$koinVersion",
                koin_android_viewmodel: "org.koin:koin-android-viewmodel:$koinVersion"
        ]

        unitTestsDeps = [
                jUnit     : "junit:junit:$junitVersion",
                hamcrest  : "org.hamcrest:hamcrest:$hamcrestVersion",
                mockk     : "io.mockk:mockk:$mockkVersion",
                timberRule: "net.lachlanmckee:timber-junit-rule:$timberJunitRuleVersion"
        ]

        featureTestingDeps = [
                archTests: "androidx.arch.core:core-testing:$archCoreTestingVersion",
                testCore : "androidx.test:core:$testCoreVersion",
                runner   : "androidx.test:runner:$espressoRunnerVersion",
                rules    : "androidx.test:rules:$espressoRunnerVersion",
                core     : "androidx.test.espresso:espresso-core:$espressoCoreVersion",
                mockk    : "io.mockk:mockk-android:$mockkVersion",
                coreArch : "android.arch.core:core-testing:$coreArchTest",
                cortTest : "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlinxVersion"
        ]

        animationDeps = [
                animation: "com.airbnb.android:lottie:$lottieVersion"
        ]

        cropperImageLib = [
                corpImage: 'com.theartofdev.edmodo:android-image-cropper:2.8.+'
        ]

        zoomImageView = [
                photoView: "com.github.chrisbanes:PhotoView:$zoomImageView"
        ]

        logsDeps = [
                timber: "com.jakewharton.timber:timber:$timberVersion"
        ]
    }
    repositories {
        google()
        jcenter()
        mavenCentral()
        maven { url 'https://jitpack.io' }
        maven { url 'https://plugins.gradle.org/m2/' }
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$android_tools_version"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-android-extensions:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        mavenCentral()
        maven { url 'https://jitpack.io' }
        maven { url 'https://plugins.gradle.org/m2/' }
        maven { url 'https://maven.fabric.io/public' }
        maven { url 'https://jitpack.io' }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}